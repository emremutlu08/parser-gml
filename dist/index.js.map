{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["const parseOption={shape:[\"geometry\",\"the_geom\",\"geom\",\"shape\"]}\r\nfunction getPoint(point,type){\r\n    let coor=point.split(type).map(function (co){\r\n        return parseFloat(co)\r\n    })\r\n    return {\r\n        type:\"Point\",\r\n        coordinates:coor\r\n    }\r\n}\r\nfunction getGeoJsonPoint(data){\r\n    let key = Object.keys(data)[0];\r\n    return key ==\"pos\" ?getPoint(data[key],' '):getPoint(data[key],',')\r\n}\r\nfunction getGeoJsonPolyline(data){\r\n    let key = Object.keys(data)[0];\r\n    let polyline=[];\r\n    if (key ==\"posList\") {\r\n        let listcoor=data[key].split(' ');\r\n        listcoor.forEach(function (co,index){\r\n            if (index%2!=0){\r\n                polyline.push([Number.parseFloat(listcoor[index-1]),Number.parseFloat( listcoor[index]) ])\r\n            }\r\n        })\r\n    } else {\r\n         data[key].split(' ').map(function (point) {\r\n            polyline.push(getPoint(point,\",\").coordinates)\r\n        });\r\n    }\r\n    return  {\r\n        type:\"LineString\",\r\n        coordinates:polyline\r\n    }\r\n}\r\nfunction getGeoJsonPolygon(data){\r\n    let key=Object.keys(data)[0]\r\n    let polygon=[];\r\n    if (data[key] instanceof  Array) {\r\n        data[key].forEach(function (lineArea) {\r\n            polygon.push(getGeoJsonPolyline(lineArea[Object.keys(lineArea)[0]]).coordinates)\r\n        })\r\n    }else {\r\n        polygon.push(getGeoJsonPolyline(data[key][Object.keys(data[key])[0]]).coordinates)\r\n    }\r\n    return {\r\n        type:\"Polygon\",\r\n        coordinates:polygon\r\n    };\r\n}\r\nfunction convertToJSON(xmlDoc) {\r\n   // xmlDoc =new DOMParser().parseFromString(xmlDoc, 'text/xml');\r\n    var nodeList = xmlDoc.childNodes;//根节点  root node\r\n    function generate(node_list) {\r\n        let obj={};\r\n        let childNodes=getNodeChildName(node_list);\r\n        for (var i = 0; i < node_list.length; i++) {\r\n            var curr_node = node_list[i];\r\n            if (curr_node.nodeType == 3) { //忽略子节点中的换行和空格   ignore  '\\n' and ' ' of  children node\r\n                continue;\r\n            }\r\n            let value=\"\";  // let value= curr_node.childNodes.length > 1 ? generate(curr_node.childNodes): (curr_node.childNodes[0]!=null?curr_node.childNodes[0].nodeValue.trim():\"\");\r\n            if (curr_node.childNodes.length>1){\r\n                   value= generate(curr_node.childNodes)\r\n            }\r\n            else if (curr_node.childNodes.length==1){\r\n                   value= curr_node.childNodes[0].nodeValue ?   curr_node.childNodes[0].nodeValue.trim(): generate(curr_node.childNodes)\r\n            }\r\n                 let key=curr_node.nodeName.substring(curr_node.nodeName.indexOf(\":\")+1)\r\n                if (childNodes[curr_node.nodeName]>1){\r\n                    if (obj[key]){\r\n                        obj[key].push(value)\r\n                    }else{\r\n                        obj[key]=[value]\r\n                    }\r\n                }else{\r\n                    obj[key]=value\r\n                }\r\n        }\r\n        return obj;\r\n    }\r\n    //find children node name from father node\r\n    function getNodeChildName( node_list){\r\n        let obj={};\r\n        for (var i = 0; i < node_list.length; i++) {\r\n            var curr_node = node_list[i];\r\n            if (curr_node.nodeType == 3) {\r\n                continue;\r\n            }\r\n            let name=node_list[i].nodeName;\r\n            obj[name]= obj.hasOwnProperty(name)?  obj[name]+1:1;\r\n        }\r\n       return obj;\r\n    }\r\n    return generate(nodeList)\r\n}\r\nfunction getMutiGeometry(data){\r\n    let key=Object.keys(data)[0]\r\n    if (data[key] instanceof Array){\r\n        let listGeometry= data[key].map(function (po){\r\n            return getGeometry(po)\r\n        })\r\n        return {\r\n            type:\"Muti\"+listGeometry[0].type,\r\n            coordinates: listGeometry.map(function (geo){\r\n                return geo.coordinates;\r\n            })\r\n        }\r\n    }else if (data[key] instanceof  Object){\r\n        let geometry= getGeometry(data[key]);\r\n        return {\r\n            type:\"Muti\"+geometry.type,\r\n            coordinates:[geometry.coordinates]\r\n        }\r\n    }else{\r\n        {}\r\n    }\r\n}\r\nfunction getGeometry(data){\r\n    let key=Object.keys(data)[0];\r\n    switch (key.toLowerCase()){\r\n        case \"point\":\r\n            return getGeoJsonPoint(data[Object.keys(data)[0]]);\r\n        case  \"linestring\":\r\n            return  getGeoJsonPolyline(data[Object.keys(data)[0]]);\r\n        case \"polygon\":\r\n            return  getGeoJsonPolygon(data[Object.keys(data)[0]]);\r\n        default:\r\n            return  getMutiGeometry(data[Object.keys(data)[0]]);\r\n    }\r\n}\r\nfunction parseFeature(feature){\r\n    var obj= {\r\n        \"type\": \"Feature\",\r\n        \"geometry\": {},\r\n        \"properties\": {}\r\n    };\r\n    let geometry=null;\r\n    for (var pKey in feature) {\r\n        !parseOption.shape.find(function (geo){return  pKey.toLowerCase()==geo})? obj.properties[pKey]=feature[pKey]: geometry=feature[pKey];\r\n    }\r\n    if (geometry) {\r\n        obj.geometry = getGeometry(geometry)\r\n    }else{\r\n        //no shape fields,select fields from data and construct object\r\n        for (var pKey in obj.properties) {\r\n             if (obj.properties[pKey] instanceof  Object || obj.properties[pKey] instanceof Array){\r\n                    obj.geometry=getGeometry({\"shape\":obj.properties[pKey]})\r\n                    delete  obj.properties[pKey]\r\n             }\r\n        }\r\n    }\r\n    return obj;\r\n}\r\nfunction parseMember(data){\r\n      let features=[];\r\n      if (data instanceof  Array){\r\n            data.forEach(function (feature){\r\n                   features.push(parseFeature(feature))\r\n            })\r\n      }else if (data instanceof  Object){\r\n           features.push(parseFeature(data))\r\n      }\r\n      return features;\r\n}\r\nfunction getGeoJson(data,option){\r\n    if (!data){ return  null }\r\n    if(option && option.shape ){\r\n        parseOption.shape.push(option.shape.toLowerCase())\r\n    }\r\n    let features=[];\r\n    try {\r\n        if (Object.prototype.toString.call(data)!=\"[object XMLDocument]\"){\r\n            data =new DOMParser().parseFromString(data, 'text/xml');\r\n        }\r\n        let jsonData=convertToJSON(data)\r\n        let featurecollection = jsonData[Object.keys(jsonData)[0]];\r\n        let key = Object.keys(featurecollection).find(function (type ) {\r\n            return type.toLowerCase().includes(\"member\")\r\n        });\r\n        let members = featurecollection[key];\r\n        // if(key.toLowerCase().includes(\"members\")){\r\n        //     if (members instanceof Array) {\r\n        //         members.forEach(function (member) {\r\n        //             features=  features.concat(parseMember(member[Object.keys(member)[0]]))\r\n        //         })\r\n        //     } else if (members instanceof Object) {\r\n        //         features=features.concat(parseMember(members[Object.keys(members)[0]]))\r\n        //     }\r\n        // } else{\r\n        //     if (members instanceof Array) {\r\n        //         members.forEach(function (member) {\r\n        //             features.push(parseFeature(member[Object.keys(member)[0]]))\r\n        //         })\r\n        //     } else if (members instanceof Object) {\r\n        //         let member=members[Object.keys(members)[0]];\r\n        //         features.push(parseFeature( member))\r\n        //     }\r\n        // }\r\n        if (members instanceof Array) {\r\n            members.forEach(function (member) {\r\n                features=  features.concat(parseMember(member[Object.keys(member)[0]]))\r\n            })\r\n        } else if (members instanceof Object) {\r\n            features=features.concat(parseMember(members[Object.keys(members)[0]]))\r\n        }\r\n        return {\r\n            type: \"FeatureCollection\",\r\n            features,\r\n        }\r\n    }catch (er){\r\n        console.log(er)\r\n        return  null\r\n    }\r\n}\r\nexports.getGeoJson=getGeoJson\r\n"],"names":["parseOption","shape","getPoint","point","type","coordinates","split","map","co","parseFloat","getGeoJsonPolyline","data","key","Object","keys","polyline","listcoor","forEach","index","push","Number","getGeometry","toLowerCase","getGeoJsonPoint","polygon","Array","lineArea","getGeoJsonPolygon","listGeometry","po","geo","geometry","getMutiGeometry","parseFeature","feature","obj","properties","pKey","find","parseMember","features","getGeoJson_1","option","prototype","toString","call","DOMParser","parseFromString","jsonData","generate","node_list","childNodes","i","length","nodeType","name","nodeName","hasOwnProperty","getNodeChildName","curr_node","value","nodeValue","trim","substring","indexOf","featurecollection","members","includes","member","concat","er","console","log"],"mappings":"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"}