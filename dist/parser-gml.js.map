{"version":3,"file":"parser-gml.js","sources":["../src/index.js"],"sourcesContent":["const parseOption={shape:[\"geometry\",\"the_geom\",\"geom\",\"shape\"]}\r\nfunction getPoint(point,type){\r\n    let coor=point.split(type).map(function (co){\r\n        return parseFloat(co)\r\n    })\r\n    return {\r\n        type:\"Point\",\r\n        coordinates:coor\r\n    }\r\n}\r\nfunction getGeoJsonPoint(data){\r\n    let key = Object.keys(data)[0];\r\n    return key ==\"pos\" ?getPoint(data[key],' '):getPoint(data[key],',')\r\n}\r\nfunction getGeoJsonPolyline(data){\r\n    let key = Object.keys(data)[0];\r\n    let polyline=[];\r\n    if (key ==\"posList\") {\r\n        let listcoor=data[key].split(' ');\r\n        listcoor.forEach(function (co,index){\r\n            if (index%2!=0){\r\n                polyline.push([Number.parseFloat(listcoor[index-1]),Number.parseFloat( listcoor[index]) ])\r\n            }\r\n        })\r\n    } else {\r\n         data[key].split(' ').map(function (point) {\r\n            polyline.push(getPoint(point,\",\").coordinates)\r\n        });\r\n    }\r\n    return  {\r\n        type:\"LineString\",\r\n        coordinates:polyline\r\n    }\r\n}\r\nfunction getGeoJsonPolygon(data){\r\n    let key=Object.keys(data)[0]\r\n    let polygon=[];\r\n    if (data[key] instanceof  Array) {\r\n        data[key].forEach(function (lineArea) {\r\n            polygon.push(getGeoJsonPolyline(lineArea[Object.keys(lineArea)[0]]).coordinates)\r\n        })\r\n    }else {\r\n        polygon.push(getGeoJsonPolyline(data[key][Object.keys(data[key])[0]]).coordinates)\r\n    }\r\n    return {\r\n        type:\"Polygon\",\r\n        coordinates:polygon\r\n    };\r\n}\r\nfunction convertToJSON(xmlDoc) {\r\n   // xmlDoc =new DOMParser().parseFromString(xmlDoc, 'text/xml');\r\n    var nodeList = xmlDoc.childNodes;//根节点  root node\r\n    function generate(node_list) {\r\n        let obj={};\r\n        let childNodes=getNodeChildName(node_list);\r\n        for (var i = 0; i < node_list.length; i++) {\r\n            var curr_node = node_list[i];\r\n            if (curr_node.nodeType == 3) { //忽略子节点中的换行和空格   ignore  '\\n' and ' ' of  children node\r\n                continue;\r\n            }\r\n            let value=\"\";  // let value= curr_node.childNodes.length > 1 ? generate(curr_node.childNodes): (curr_node.childNodes[0]!=null?curr_node.childNodes[0].nodeValue.trim():\"\");\r\n            if (curr_node.childNodes.length>1){\r\n                   value= generate(curr_node.childNodes)\r\n            }\r\n            else if (curr_node.childNodes.length==1){\r\n                   value= curr_node.childNodes[0].nodeValue ?   curr_node.childNodes[0].nodeValue.trim(): generate(curr_node.childNodes)\r\n            }\r\n                 let key=curr_node.nodeName.substring(curr_node.nodeName.indexOf(\":\")+1)\r\n                if (childNodes[curr_node.nodeName]>1){\r\n                    if (obj[key]){\r\n                        obj[key].push(value)\r\n                    }else{\r\n                        obj[key]=[value]\r\n                    }\r\n                }else{\r\n                    obj[key]=value\r\n                }\r\n        }\r\n        return obj;\r\n    }\r\n    //find children node name from father node\r\n    function getNodeChildName( node_list){\r\n        let obj={};\r\n        for (var i = 0; i < node_list.length; i++) {\r\n            var curr_node = node_list[i];\r\n            if (curr_node.nodeType == 3) {\r\n                continue;\r\n            }\r\n            let name=node_list[i].nodeName;\r\n            obj[name]= obj.hasOwnProperty(name)?  obj[name]+1:1;\r\n        }\r\n       return obj;\r\n    }\r\n    return generate(nodeList)\r\n}\r\nfunction getMutiGeometry(data){\r\n    let key=Object.keys(data)[0]\r\n    if (data[key] instanceof Array){\r\n        let listGeometry= data[key].map(function (po){\r\n            return getGeometry(po)\r\n        })\r\n        return {\r\n            type:\"Muti\"+listGeometry[0].type,\r\n            coordinates: listGeometry.map(function (geo){\r\n                return geo.coordinates;\r\n            })\r\n        }\r\n    }else if (data[key] instanceof  Object){\r\n        let geometry= getGeometry(data[key]);\r\n        return {\r\n            type:\"Muti\"+geometry.type,\r\n            coordinates:[geometry.coordinates]\r\n        }\r\n    }else{\r\n        {}\r\n    }\r\n}\r\nfunction getGeometry(data){\r\n    let key=Object.keys(data)[0];\r\n    switch (key.toLowerCase()){\r\n        case \"point\":\r\n            return getGeoJsonPoint(data[Object.keys(data)[0]]);\r\n        case  \"linestring\":\r\n            return  getGeoJsonPolyline(data[Object.keys(data)[0]]);\r\n        case \"polygon\":\r\n            return  getGeoJsonPolygon(data[Object.keys(data)[0]]);\r\n        default:\r\n            return  getMutiGeometry(data[Object.keys(data)[0]]);\r\n    }\r\n}\r\nfunction parseFeature(feature){\r\n    var obj= {\r\n        \"type\": \"Feature\",\r\n        \"geometry\": {},\r\n        \"properties\": {}\r\n    };\r\n    let geometry=null;\r\n    for (var pKey in feature) {\r\n        !parseOption.shape.find(function (geo){return  pKey.toLowerCase()==geo})? obj.properties[pKey]=feature[pKey]: geometry=feature[pKey];\r\n    }\r\n    if (geometry) {\r\n        obj.geometry = getGeometry(geometry)\r\n    }else{\r\n        //no shape fields,select fields from data and construct object\r\n        for (var pKey in obj.properties) {\r\n             if (obj.properties[pKey] instanceof  Object || obj.properties[pKey] instanceof Array){\r\n                    obj.geometry=getGeometry({\"shape\":obj.properties[pKey]})\r\n                    delete  obj.properties[pKey]\r\n             }\r\n        }\r\n    }\r\n    return obj;\r\n}\r\nfunction parseMember(data){\r\n      let features=[];\r\n      if (data instanceof  Array){\r\n            data.forEach(function (feature){\r\n                   features.push(parseFeature(feature))\r\n            })\r\n      }else if (data instanceof  Object){\r\n           features.push(parseFeature(data))\r\n      }\r\n      return features;\r\n}\r\nfunction getGeoJson(data,option){\r\n    if (!data){ return  null }\r\n    if(option && option.shape ){\r\n        parseOption.shape.push(option.shape.toLowerCase())\r\n    }\r\n    let features=[];\r\n    try {\r\n        if (Object.prototype.toString.call(data)!=\"[object XMLDocument]\"){\r\n            data =new DOMParser().parseFromString(data, 'text/xml');\r\n        }\r\n        let jsonData=convertToJSON(data)\r\n        let featurecollection = jsonData[Object.keys(jsonData)[0]];\r\n        let key = Object.keys(featurecollection).find(function (type ) {\r\n            return type.toLowerCase().includes(\"member\")\r\n        });\r\n        let members = featurecollection[key];\r\n        // if(key.toLowerCase().includes(\"members\")){\r\n        //     if (members instanceof Array) {\r\n        //         members.forEach(function (member) {\r\n        //             features=  features.concat(parseMember(member[Object.keys(member)[0]]))\r\n        //         })\r\n        //     } else if (members instanceof Object) {\r\n        //         features=features.concat(parseMember(members[Object.keys(members)[0]]))\r\n        //     }\r\n        // } else{\r\n        //     if (members instanceof Array) {\r\n        //         members.forEach(function (member) {\r\n        //             features.push(parseFeature(member[Object.keys(member)[0]]))\r\n        //         })\r\n        //     } else if (members instanceof Object) {\r\n        //         let member=members[Object.keys(members)[0]];\r\n        //         features.push(parseFeature( member))\r\n        //     }\r\n        // }\r\n        if (members instanceof Array) {\r\n            members.forEach(function (member) {\r\n                features=  features.concat(parseMember(member[Object.keys(member)[0]]))\r\n            })\r\n        } else if (members instanceof Object) {\r\n            features=features.concat(parseMember(members[Object.keys(members)[0]]))\r\n        }\r\n        return {\r\n            type: \"FeatureCollection\",\r\n            features,\r\n        }\r\n    }catch (er){\r\n        console.log(er)\r\n        return  null\r\n    }\r\n}\r\nexports.getGeoJson=getGeoJson\r\n"],"names":[],"mappings":"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"}